{"ast":null,"code":"var _jsxFileName = \"/Users/alksdjesus/Assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { React, useState, useEffect } from 'react';\nimport Card from \"./components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/butterfly.png\",\n  matched: false\n}, {\n  \"src\": \"/img/cat.png\",\n  matched: false\n}, {\n  \"src\": \"/img/dog.png\",\n  matched: false\n}, {\n  \"src\": \"/img/hedgehog.png\",\n  matched: false\n}, {\n  \"src\": \"/img/panda.png\",\n  matched: false\n}, {\n  \"src\": \"/img/penguin.png\",\n  matched: false\n}, {\n  \"src\": \"/img/fish.png\",\n  matched: false\n}, {\n  \"src\": \"/img/flamingo.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  // shuffles cards \n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setMoves(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  // handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetMove();\n      } else {\n        setTimeout(() => resetMove(), 1500);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  // reset moves & increase turn \n  const resetMove = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setMoves(prevMoves => prevMoves + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game of Memory: Animals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \" New Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Moves: \", moves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HzQ4MwM4TY3aYB+zjJCX/3i+B5g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","cardImages","matched","App","cards","setCards","moves","setMoves","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetMove","setTimeout","console","log","prevMoves"],"sources":["/Users/alksdjesus/Assignment2/src/App.js"],"sourcesContent":["import './App.css'\nimport { React, useState, useEffect } from 'react';\nimport Card from \"./components/Card\";\n\nconst cardImages = [\n  { \"src\": \"/img/butterfly.png\", matched: false },\n  { \"src\": \"/img/cat.png\", matched: false },\n  { \"src\": \"/img/dog.png\", matched: false },\n  { \"src\": \"/img/hedgehog.png\", matched: false },\n  { \"src\": \"/img/panda.png\", matched: false },\n  { \"src\": \"/img/penguin.png\", matched: false },\n  { \"src\": \"/img/fish.png\", matched: false },\n  { \"src\": \"/img/flamingo.png\", matched: false }\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [moves, setMoves] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n\n\n  // shuffles cards \n  const shuffleCards = () => {\n    const shuffledCards = [ ...cardImages, ...cardImages ]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({ ...card, id: Math.random() }))\n\n    setCards(shuffledCards)\n    setMoves(0)\n    setChoiceOne(null)\n    setChoiceTwo(null)\n  }\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return (prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } \n            else {\n              return card\n            }\n          }))\n        })\n        resetMove()\n      } else {\n        setTimeout(() => resetMove(), 1500)\n      }\n    }\n\n  }, [choiceOne, choiceTwo])\n\n  console.log(cards)\n\n  // reset moves & increase turn \n  const resetMove = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setMoves(prevMoves => prevMoves + 1 )\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Game of Memory: Animals</h1>\n      <button onClick={shuffleCards} > New Game </button>\n      {/* moves: {moves} */}\n      <h4>Moves: {moves}</h4>\n\n      <div className=\"board\"> \n        {cards.map(card => (\n          <Card \n            key={card.id} \n            card={card} \n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n          />\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}